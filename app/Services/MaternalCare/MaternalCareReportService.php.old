<?php

namespace App\Services\MaternalCare;

use Illuminate\Support\Facades\DB;

class MaternalCareReportService
{
    public function get_projected_population()
    {
        return DB::table('settings_catchment_barangays')
            ->selectRaw('
                        facility_code,
                        barangay_code,
                        name AS barangay_name,
                        year,
                        settings_catchment_barangays.population,
                        (SELECT SUM(population) FROM settings_catchment_barangays) AS total_population
                    ')
            ->leftJoin('barangays', 'barangays.psgc_10_digit_code', '=', 'settings_catchment_barangays.barangay_code')
            ->whereFacilityCode(auth()->user()->facility_code)
            ->groupBy('facility_code', 'barangay_code', 'year', 'population');
    }

    public function get_catchment_barangays()
    {
        $result = DB::table('settings_catchment_barangays')
            ->selectRaw('
                        facility_code,
                        barangay_code
                    ')
            ->whereFacilityCode(auth()->user()->facility_code);

        return $result->pluck('barangay_code');
    }

    public function get_all_brgy_municipalities_patient()
    {
        return DB::table('municipalities')
            ->selectRaw('
                        patient_id,
                        municipalities.psgc_10_digit_code AS municipality_code,
                        barangays.psgc_10_digit_code AS barangay_code
                    ')
            ->join('barangays', 'municipalities.id', '=', 'barangays.geographic_id')
            ->join('household_folders', 'barangays.psgc_10_digit_code', '=', 'household_folders.barangay_code')
            ->join('household_members', 'household_folders.id', '=', 'household_members.household_folder_id');
            //->join('patients', 'household_members.patient_id', '=', 'patients.id')
            //->groupBy('patient_id', 'municipalities.psgc_10_digit_code', 'barangays.psgc_10_digit_code');
    }

    public function get_4anc_give_birth($request)
    {
        return DB::table(function ($query) use ($request) {
            $query->selectRaw("
                            SUM(
                                CASE WHEN trimester = 1 THEN
                                    1
                                ELSE
                                    0
                                END) AS trimester1,
                            SUM(
                                CASE WHEN trimester = 2 THEN
                                    1
                                ELSE
                                    0
                                END) AS trimester2,
                            SUM(
                                CASE WHEN trimester = 3 THEN
                                    1
                                ELSE
                                    0
                                END) AS trimester3,
                            TIMESTAMPDIFF(YEAR, birthdate, delivery_date) AS age,
                            DATE_FORMAT(delivery_date, '%Y-%m') AS date_of_service
                ")
                ->from('consult_mc_prenatals')
                ->join('patients', 'consult_mc_prenatals.patient_id', '=', 'patients.id')
                ->join('patient_mc', 'patients.id', '=', 'patient_mc.patient_id')
                ->join('patient_mc_post_registrations', 'patient_mc.id', '=', 'patient_mc_post_registrations.patient_mc_id')
                ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
                    $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_prenatals.patient_id');
                })
                /*->when($request->category == 'all', function ($q) {
                    $q->where('consult_mc_prenatals.facility_code', auth()->user()->facility_code);
                })
                ->when($request->category == 'facility', function ($q) {
                    $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
                })
                ->when($request->category == 'municipality', function ($q) use ($request) {
                    $q->whereIn('municipality_code', explode(',', $request->code));
                })
                ->when($request->category == 'barangay', function ($q) use ($request) {
                    $q->whereIn('barangay_code', explode(',', $request->code));
                })*/
                ->whereIn('trimester', [1, 2, 3])
                ->whereYear('delivery_date', $request->year)
                ->whereMonth('delivery_date', $request->month)
                ->groupBy('delivery_date', 'birthdate')
                ->havingRaw('trimester1 >= 1 AND trimester2 >= 1 AND trimester3 >= 2');
        })
        ->selectRaw("
                    SUM(
                        CASE
                            WHEN age BETWEEN 10 AND 14
                            THEN 1
                            ELSE 0
                        END
                    ) AS '10_to_14',
                    SUM(
                        CASE
                            WHEN age BETWEEN 15 AND 19
                            THEN 1
                            ELSE 0
                        END
                    ) AS '15_to_19',
                    SUM(
                        CASE
                            WHEN age BETWEEN 20 AND 49
                            THEN 1
                            ELSE 0
                        END
                    ) AS '20_to_49'
            ");
    }

    public function pregnant_assessed_nutrition($request)
    {
        return DB::table(function ($query) use ($request) {
            $query->selectRaw("
                            CASE WHEN ROUND(patient_weight / POWER((patient_height / 100), 2), 1) BETWEEN 18.5
                                AND 22.9 THEN
                                'NORMAL'
                            WHEN ROUND(patient_weight / POWER((patient_height / 100), 2), 1) >= 23 THEN
                                'HIGH'
                            WHEN ROUND(patient_weight / POWER((patient_height / 100), 2), 1) < 18.5 THEN
                                'LOW'
                            END AS 'bmi',
                            TIMESTAMPDIFF(YEAR, birthdate, prenatal_date) AS age
                ")
                ->from('consult_mc_prenatals')
                ->join('patients', 'consult_mc_prenatals.patient_id', '=', 'patients.id')
                ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
                    $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_prenatals.patient_id');
                })
                ->when($request->category == 'all', function ($q) {
                    $q->where('facility_code', auth()->user()->facility_code);
                })
                ->when($request->category == 'facility', function ($q) {
                    $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
                })
                ->when($request->category == 'municipality', function ($q) use ($request) {
                    $q->whereIn('municipality_code', explode(',', $request->code));
                })
                ->when($request->category == 'barangay', function ($q) use ($request) {
                    $q->whereIn('barangay_code', explode(',', $request->code));
                })
                ->whereTrimester(1)
                ->whereYear('prenatal_date', $request->year)
                ->whereMonth('prenatal_date', $request->month);
        })
            ->selectRaw("
                    bmi,
                    SUM(
                        CASE
                            WHEN age BETWEEN 10 AND 14
                            THEN 1
                            ELSE 0
                        END
                    ) AS '10_to_14',
                    SUM(
                        CASE
                            WHEN age BETWEEN 15 AND 19
                            THEN 1
                            ELSE 0
                        END
                    ) AS '15_to_19',
                    SUM(
                        CASE
                            WHEN age BETWEEN 20 AND 49
                            THEN 1
                            ELSE 0
                        END
                    ) AS '20_to_49'
            ")
            ->whereIn('bmi', ['HIGH', 'NORMAL', 'LOW'])
            ->groupBy('bmi');
    }

    public function pregnant_td2_vaccine($request)
    {
        return DB::table(function ($query) use ($request) {
            $query->selectRaw("
                            vaccine_id,
                            status_id,
                            (
                                SELECT
                                    COUNT(*)
                                FROM
                                    patient_vaccines pv
                                WHERE
                                    pv.patient_id = patient_vaccines.patient_id
                                    AND pv.vaccine_id = patient_vaccines.vaccine_id
                                    AND pv.vaccine_date <= patient_vaccines.vaccine_date) AS vaccine_seq,
                                    TIMESTAMPDIFF(YEAR, birthdate, vaccine_date) AS age
                ")
                ->from('patient_vaccines')
                ->join('patients', 'patient_vaccines.patient_id', '=', 'patients.id')
                ->join('patient_mc', 'patient_vaccines.patient_id', '=', 'patient_mc.patient_id')
                ->join('patient_mc_pre_registrations', 'patient_mc.id', '=', 'patient_mc_pre_registrations.patient_mc_id')
                ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
                    $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_prenatals.patient_id');
                })
                ->when($request->category == 'all', function ($q) {
                    $q->where('facility_code', auth()->user()->facility_code);
                })
                ->when($request->category == 'facility', function ($q) {
                    $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
                })
                ->when($request->category == 'municipality', function ($q) use ($request) {
                    $q->whereIn('municipality_code', explode(',', $request->code));
                })
                ->when($request->category == 'barangay', function ($q) use ($request) {
                    $q->whereIn('barangay_code', explode(',', $request->code));
                })
                ->whereVaccineId('TD')
                ->whereInitialGravidity(1)
                ->whereYear('vaccine_date', $request->year)
                ->whereMonth('vaccine_date', $request->month)
                ->havingRaw('vaccine_seq 2 AND status_id = 1');
        })
            ->selectRaw("
                    SUM(
                        CASE
                            WHEN age BETWEEN 10 AND 14
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD2_10_to_14',
                    SUM(
                        CASE
                            WHEN age BETWEEN 15 AND 19
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD2_15_to_19',
                    SUM(
                        CASE
                            WHEN age BETWEEN 20 AND 49
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD2_20_to_49'
            ");
    }

    public function pregnant_td3_vaccine($request)
    {
        return DB::table(function ($query) use ($request) {
            $query->selectRaw("
                            vaccine_id,
                            status_id,
                            (
                                SELECT
                                    COUNT(*)
                                FROM
                                    patient_vaccines pv
                                WHERE
                                    pv.patient_id = patient_vaccines.patient_id
                                    AND pv.vaccine_id = patient_vaccines.vaccine_id
                                    AND pv.vaccine_date <= patient_vaccines.vaccine_date) AS vaccine_seq,
                                    TIMESTAMPDIFF(YEAR, birthdate, vaccine_date) AS age
                ")
                ->from('patient_vaccines')
                ->join('patients', 'patient_vaccines.patient_id', '=', 'patients.id')
                ->join('patient_mc', 'patient_vaccines.patient_id', '=', 'patient_mc.patient_id')
                ->join('patient_mc_pre_registrations', 'patient_mc.id', '=', 'patient_mc_pre_registrations.patient_mc_id')
                ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
                    $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_prenatals.patient_id');
                })
                ->when($request->category == 'all', function ($q) {
                    $q->where('facility_code', auth()->user()->facility_code);
                })
                ->when($request->category == 'facility', function ($q) {
                    $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
                })
                ->when($request->category == 'municipality', function ($q) use ($request) {
                    $q->whereIn('municipality_code', explode(',', $request->code));
                })
                ->when($request->category == 'barangay', function ($q) use ($request) {
                    $q->whereIn('barangay_code', explode(',', $request->code));
                })
                ->whereVaccineId('TD')
                ->where('initial_gravidity', '>=', 2)
                ->whereYear('vaccine_date', $request->year)
                ->whereMonth('vaccine_date', $request->month)
                ->havingRaw('vaccine_seq IN (3,4,5) AND status_id = 1');
        })
            ->selectRaw("
                    SUM(
                        CASE
                            WHEN age BETWEEN 10 AND 14
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD3_10_to_14',
                    SUM(
                        CASE
                            WHEN age BETWEEN 15 AND 19
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD3_15_to_19',
                    SUM(
                        CASE
                            WHEN age BETWEEN 20 AND 49
                            THEN 1
                            ELSE 0
                        END
                    ) AS 'TD3_20_to_49'
            ");
    }

//    public function get_service($request, $service, $visit)
//    {
//        return DB::table(function ($query) use ($request, $service, $visit) {
//            $query->selectRaw("
//                        patient_mc_id,
//                        CONCAT(patients.last_name, ',', ' ', patients.first_name) AS name,
//                        birthdate,
//                        service_id,
//                        GROUP_CONCAT(DATE_FORMAT(service_date, '%Y-%m') ORDER BY service_date ASC) AS service_dates,
//                        GROUP_CONCAT(DATE_FORMAT(service_date, '%Y-%m-%d') ORDER BY service_date ASC) AS date,
//                        GROUP_CONCAT(service_qty ORDER BY service_date ASC) AS service_qty,
//                        GROUP_CONCAT(TIMESTAMPDIFF(YEAR, birthdate, DATE_FORMAT(service_date, '%Y-%m-%d')) ORDER BY service_date ASC) AS age_year,
//                        municipality_code,
//                        barangay_code
//		            ")
//                ->from('consult_mc_services')
//                ->join('patients', 'consult_mc_services.patient_id', '=', 'patients.id')
//                ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
//                    $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_services.patient_id');
//                })
//                ->when($request->category == 'all', function ($q) {
//                    $q->where('consult_mc_services.facility_code', auth()->user()->facility_code);
//                })
//                ->when($request->category == 'facility', function ($q) {
//                    $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
//                })
//                ->when($request->category == 'municipality', function ($q) use ($request) {
//                    $q->whereIn('municipality_code', explode(',', $request->code));
//                })
//                ->when($request->category == 'barangay', function ($q) use ($request) {
//                    $q->whereIn('barangay_code', explode(',', $request->code));
//                })
//                ->whereVisitStatus($visit)
//                ->whereServiceId($service)
//                ->groupBy('patient_mc_id');
//        });
//    }

    public function get_pregnant_test($positive)
    {
        return DB::table('consult_mc_services')
            ->selectRaw('
                        consult_mc_services.facility_code,
                        service_id,
                        positive_result,
                        service_date,
                        TIMESTAMPDIFF(YEAR, birthdate, service_date) AS age
                    ')
            ->join('patients', 'consult_mc_services.patient_id', '=', 'patients.id')
            ->whereIn('service_id', ['SYP', 'HEPB', 'HIV', 'CBC', 'DIBTS'])
            ->when($positive == '1', function ($q) {
                $q->wherePositiveResult(1);
            });
    }

    public function pregnant_test($positive, $request)
    {
        return DB::table('lib_mc_services')
            ->selectRaw("
                        lib_mc_services.id AS service_id,
                        SUM(
                            CASE WHEN age BETWEEN 10 AND 14 THEN
                                1
                            ELSE
                                0
                            END) AS '10_to_14',
                        SUM(
                            CASE WHEN age BETWEEN 15 AND 19 THEN
                                1
                            ELSE
                                0
                            END) AS '15_to_19',
                        SUM(
                            CASE WHEN age BETWEEN 20 AND 49 THEN
                                1
                            ELSE
                                0
                            END) AS '20_to_49'
                    ")
            ->leftJoinSub($this->get_pregnant_test($positive), 'pregnant', function ($join) {
                $join->on('pregnant.service_id', '=', 'lib_mc_services.id');
            })
            ->joinSub($this->get_all_brgy_municipalities_patient(), 'municipalities_brgy', function ($join) {
                $join->on('municipalities_brgy.patient_id', '=', 'consult_mc_services.patient_id');
            })
            ->when($request->category == 'all', function ($q) {
                $q->where('pregnant.facility_code', auth()->user()->facility_code);
            })
            ->when($request->category == 'facility', function ($q) {
                $q->whereIn('municipalities_brgy.barangay_code', $this->get_catchment_barangays());
            })
            ->when($request->category == 'municipality', function ($q) use ($request) {
                $q->whereIn('municipality_code', explode(',', $request->code));
            })
            ->when($request->category == 'barangay', function ($q) use ($request) {
                $q->whereIn('barangay_code', explode(',', $request->code));
            })
            ->whereIn('lib_mc_services.id', ['SYP', 'HEPB', 'HIV', 'CBC', 'DIBTS'])
            ->groupBy('lib_mc_services.id');
    }
}
